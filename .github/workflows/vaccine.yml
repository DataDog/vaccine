name: Vaccine

on:
  push:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA'
        required: true
        default: 'latest_snapshot'

jobs:
  prepare_vaccine:
    name: Prepare injection artifacts
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/datadog/dd-trace-rb/dd-lib-ruby-init:${{ inputs.commit_sha || 'latest_snapshot' }}
      options: --user root
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: vaccine
          path: /datadog-init/package

  inoculate:
    name: ${{ matrix.engine.name }} ${{ matrix.engine.version }} with ${{ matrix.command }}
    needs: prepare_vaccine
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command:
          - rails s
          - bin/rails s
          - bundle exec rails s
        engine:
          - name: ruby
            version: '3.4'
          - name: ruby
            version: '3.3'
          - name: ruby
            version: '3.2'
          - name: ruby
            version: '3.1'
          - name: ruby
            version: '3.0'
          - name: ruby
            version: '2.7'
          - name: ruby
            version: '2.6'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: vaccine
          path: vaccine
      - run: ls -Al vaccine
      - run: |
          docker build \
            --build-arg RUBY_BASE_IMAGE=${{ matrix.engine.name }}:${{ matrix.engine.version }} \
            -t patient:${{ matrix.engine.name }}-${{ matrix.engine.version }} \
            --file src/Dockerfile \
            src
      - run: |
          docker run -d \
            --name inoculation \
            -e RUBYOPT=-r/vaccine/host_inject \
            -e DD_TRACE_DEBUG=true \
            -v $(pwd)/vaccine:/vaccine \
            -p 3000:3000 \
            patient:${{ matrix.engine.name }}-${{ matrix.engine.version }} \
            "${{ matrix.command }} -b 0.0.0.0"
      - run: sleep 10
      - run: docker logs inoculation
      - run: curl -v --retry 10 -f --retry-all-errors --retry-delay 5 -s -o /dev/null http://localhost:3000
      - run: docker logs inoculation

  notify:
    runs-on: ubuntu-latest
    needs: inoculate
    if: always()
    steps:
      - if: ${{ needs.inoculate.result == 'success' }}
        name: Notify on success
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_ID }}
          slack-message: |-
            :github: ${{ github.repository }}: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            :github-check: ${{ github.ref_type }}: ${{ github.ref_name }}
      - if: ${{ needs.inoculate.result == 'failure' }}
        name: Notify on failure
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_ID }}
          slack-message: |-
            :github: ${{ github.repository }}: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
